;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/27/2012 5:40:12 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28ED      	GOTO       237
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0821      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000A	0x2003      	CALL       _____DoICP
0x000B	0x118A      	BCF        PCLATH, 3
0x000C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000F	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0010	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0011	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0012	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0013	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0014	0x280A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0015	0x0008      	RETURN
; end of ___CC2DW
_sendStatus:
;KC104_Lights-2.c,19 :: 		void sendStatus(char lightStatus){  // o = on, f = off
;KC104_Lights-2.c,20 :: 		int i = 0;
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1303      	BCF        STATUS, 6
0x0018	0x01D1      	CLRF       sendStatus_i_L0
0x0019	0x01D2      	CLRF       sendStatus_i_L0+1
;KC104_Lights-2.c,21 :: 		PORTB &= 0b10001111;
0x001A	0x308F      	MOVLW      143
0x001B	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,23 :: 		TRISB &= 0b10101111;// changes to output leaves pulse pin as an input
0x001C	0x30AF      	MOVLW      175
0x001D	0x1683      	BSF        STATUS, 5
0x001E	0x0586      	ANDWF      TRISB, 1
;KC104_Lights-2.c,24 :: 		delay_ms(5);
0x001F	0x300D      	MOVLW      13
0x0020	0x00FC      	MOVWF      R12
0x0021	0x30FB      	MOVLW      251
0x0022	0x00FD      	MOVWF      R13
L_sendStatus0:
0x0023	0x0BFD      	DECFSZ     R13, 1
0x0024	0x2823      	GOTO       L_sendStatus0
0x0025	0x0BFC      	DECFSZ     R12, 1
0x0026	0x2823      	GOTO       L_sendStatus0
0x0027	0x0000      	NOP
0x0028	0x0000      	NOP
;KC104_Lights-2.c,25 :: 		PORTB |= (parityPin + dataPin); //stick out our thumb
0x0029	0x3050      	MOVLW      80
0x002A	0x1283      	BCF        STATUS, 5
0x002B	0x0486      	IORWF      PORTB, 1
;KC104_Lights-2.c,29 :: 		while(!(PORTB & pulsePin));// wait for ardi pulse
L_sendStatus1:
0x002C	0x1A86      	BTFSC      PORTB, 5
0x002D	0x282F      	GOTO       L_sendStatus2
0x002E	0x282C      	GOTO       L_sendStatus1
L_sendStatus2:
;KC104_Lights-2.c,30 :: 		delay_ms(1);
0x002F	0x3003      	MOVLW      3
0x0030	0x00FC      	MOVWF      R12
0x0031	0x3097      	MOVLW      151
0x0032	0x00FD      	MOVWF      R13
L_sendStatus3:
0x0033	0x0BFD      	DECFSZ     R13, 1
0x0034	0x2833      	GOTO       L_sendStatus3
0x0035	0x0BFC      	DECFSZ     R12, 1
0x0036	0x2833      	GOTO       L_sendStatus3
0x0037	0x0000      	NOP
0x0038	0x0000      	NOP
;KC104_Lights-2.c,31 :: 		while(!(PORTB & pulsePin));
L_sendStatus4:
0x0039	0x1A86      	BTFSC      PORTB, 5
0x003A	0x283C      	GOTO       L_sendStatus5
0x003B	0x2839      	GOTO       L_sendStatus4
L_sendStatus5:
;KC104_Lights-2.c,32 :: 		delay_ms(1);
0x003C	0x3003      	MOVLW      3
0x003D	0x00FC      	MOVWF      R12
0x003E	0x3097      	MOVLW      151
0x003F	0x00FD      	MOVWF      R13
L_sendStatus6:
0x0040	0x0BFD      	DECFSZ     R13, 1
0x0041	0x2840      	GOTO       L_sendStatus6
0x0042	0x0BFC      	DECFSZ     R12, 1
0x0043	0x2840      	GOTO       L_sendStatus6
0x0044	0x0000      	NOP
0x0045	0x0000      	NOP
;KC104_Lights-2.c,33 :: 		while(PORTB & pulsePin); //wait for pulse to end
L_sendStatus7:
0x0046	0x1E86      	BTFSS      PORTB, 5
0x0047	0x2849      	GOTO       L_sendStatus8
0x0048	0x2846      	GOTO       L_sendStatus7
L_sendStatus8:
;KC104_Lights-2.c,34 :: 		delay_ms(5); //give ardi time to change dataDirection, usually real quick "1"
0x0049	0x300D      	MOVLW      13
0x004A	0x00FC      	MOVWF      R12
0x004B	0x30FB      	MOVLW      251
0x004C	0x00FD      	MOVWF      R13
L_sendStatus9:
0x004D	0x0BFD      	DECFSZ     R13, 1
0x004E	0x284D      	GOTO       L_sendStatus9
0x004F	0x0BFC      	DECFSZ     R12, 1
0x0050	0x284D      	GOTO       L_sendStatus9
0x0051	0x0000      	NOP
0x0052	0x0000      	NOP
;KC104_Lights-2.c,35 :: 		PORTB &= 0b10001111;
0x0053	0x308F      	MOVLW      143
0x0054	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,36 :: 		delay_ms(1);
0x0055	0x3003      	MOVLW      3
0x0056	0x00FC      	MOVWF      R12
0x0057	0x3097      	MOVLW      151
0x0058	0x00FD      	MOVWF      R13
L_sendStatus10:
0x0059	0x0BFD      	DECFSZ     R13, 1
0x005A	0x2859      	GOTO       L_sendStatus10
0x005B	0x0BFC      	DECFSZ     R12, 1
0x005C	0x2859      	GOTO       L_sendStatus10
0x005D	0x0000      	NOP
0x005E	0x0000      	NOP
;KC104_Lights-2.c,37 :: 		TRISB &= 0b10001111; //puts pulse pin to output
0x005F	0x308F      	MOVLW      143
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x0586      	ANDWF      TRISB, 1
;KC104_Lights-2.c,40 :: 		if(lightStatus == 'o'){  //0b11111111 turns all lights on
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x0850      	MOVF       FARG_sendStatus_lightStatus, 0
0x0064	0x3A6F      	XORLW      111
0x0065	0x1D03      	BTFSS      STATUS, 2
0x0066	0x2891      	GOTO       L_sendStatus11
;KC104_Lights-2.c,41 :: 		for(i=0; i<8; i++){
0x0067	0x01D1      	CLRF       sendStatus_i_L0
0x0068	0x01D2      	CLRF       sendStatus_i_L0+1
L_sendStatus12:
0x0069	0x3080      	MOVLW      128
0x006A	0x0652      	XORWF      sendStatus_i_L0+1, 0
0x006B	0x00F0      	MOVWF      R0
0x006C	0x3080      	MOVLW      128
0x006D	0x0270      	SUBWF      R0, 0
0x006E	0x1D03      	BTFSS      STATUS, 2
0x006F	0x2872      	GOTO       L__sendStatus66
0x0070	0x3008      	MOVLW      8
0x0071	0x0251      	SUBWF      sendStatus_i_L0, 0
L__sendStatus66:
0x0072	0x1803      	BTFSC      STATUS, 0
0x0073	0x2890      	GOTO       L_sendStatus13
;KC104_Lights-2.c,43 :: 		PORTB |= dataPin;
0x0074	0x1606      	BSF        PORTB, 4
;KC104_Lights-2.c,44 :: 		PORTB |= pulsePin;
0x0075	0x1686      	BSF        PORTB, 5
;KC104_Lights-2.c,46 :: 		delay_ms(pulseDelay);
0x0076	0x3034      	MOVLW      52
0x0077	0x00FC      	MOVWF      R12
0x0078	0x30F1      	MOVLW      241
0x0079	0x00FD      	MOVWF      R13
L_sendStatus15:
0x007A	0x0BFD      	DECFSZ     R13, 1
0x007B	0x287A      	GOTO       L_sendStatus15
0x007C	0x0BFC      	DECFSZ     R12, 1
0x007D	0x287A      	GOTO       L_sendStatus15
0x007E	0x0000      	NOP
0x007F	0x0000      	NOP
;KC104_Lights-2.c,47 :: 		PORTB &= 0b10001111;  //clears comm pins
0x0080	0x308F      	MOVLW      143
0x0081	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,48 :: 		delay_ms(pulseDelay);
0x0082	0x3034      	MOVLW      52
0x0083	0x00FC      	MOVWF      R12
0x0084	0x30F1      	MOVLW      241
0x0085	0x00FD      	MOVWF      R13
L_sendStatus16:
0x0086	0x0BFD      	DECFSZ     R13, 1
0x0087	0x2886      	GOTO       L_sendStatus16
0x0088	0x0BFC      	DECFSZ     R12, 1
0x0089	0x2886      	GOTO       L_sendStatus16
0x008A	0x0000      	NOP
0x008B	0x0000      	NOP
;KC104_Lights-2.c,41 :: 		for(i=0; i<8; i++){
0x008C	0x0AD1      	INCF       sendStatus_i_L0, 1
0x008D	0x1903      	BTFSC      STATUS, 2
0x008E	0x0AD2      	INCF       sendStatus_i_L0+1, 1
;KC104_Lights-2.c,49 :: 		}
0x008F	0x2869      	GOTO       L_sendStatus12
L_sendStatus13:
;KC104_Lights-2.c,50 :: 		}
0x0090	0x28BF      	GOTO       L_sendStatus17
L_sendStatus11:
;KC104_Lights-2.c,51 :: 		else if(lightStatus == 'f'){ //0b00000000 turns all pins to zero
0x0091	0x0850      	MOVF       FARG_sendStatus_lightStatus, 0
0x0092	0x3A66      	XORLW      102
0x0093	0x1D03      	BTFSS      STATUS, 2
0x0094	0x28BF      	GOTO       L_sendStatus18
;KC104_Lights-2.c,52 :: 		for(i=0; i<8; i++){
0x0095	0x01D1      	CLRF       sendStatus_i_L0
0x0096	0x01D2      	CLRF       sendStatus_i_L0+1
L_sendStatus19:
0x0097	0x3080      	MOVLW      128
0x0098	0x0652      	XORWF      sendStatus_i_L0+1, 0
0x0099	0x00F0      	MOVWF      R0
0x009A	0x3080      	MOVLW      128
0x009B	0x0270      	SUBWF      R0, 0
0x009C	0x1D03      	BTFSS      STATUS, 2
0x009D	0x28A0      	GOTO       L__sendStatus67
0x009E	0x3008      	MOVLW      8
0x009F	0x0251      	SUBWF      sendStatus_i_L0, 0
L__sendStatus67:
0x00A0	0x1803      	BTFSC      STATUS, 0
0x00A1	0x28BF      	GOTO       L_sendStatus20
;KC104_Lights-2.c,54 :: 		PORTB &= 0b10001111; //clear
0x00A2	0x308F      	MOVLW      143
0x00A3	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,55 :: 		PORTB |= pulsePin;  //pulse
0x00A4	0x1686      	BSF        PORTB, 5
;KC104_Lights-2.c,57 :: 		delay_ms(pulseDelay);
0x00A5	0x3034      	MOVLW      52
0x00A6	0x00FC      	MOVWF      R12
0x00A7	0x30F1      	MOVLW      241
0x00A8	0x00FD      	MOVWF      R13
L_sendStatus22:
0x00A9	0x0BFD      	DECFSZ     R13, 1
0x00AA	0x28A9      	GOTO       L_sendStatus22
0x00AB	0x0BFC      	DECFSZ     R12, 1
0x00AC	0x28A9      	GOTO       L_sendStatus22
0x00AD	0x0000      	NOP
0x00AE	0x0000      	NOP
;KC104_Lights-2.c,58 :: 		PORTB &= 0b10001111;  //clears comm pins
0x00AF	0x308F      	MOVLW      143
0x00B0	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,59 :: 		delay_ms(pulseDelay);
0x00B1	0x3034      	MOVLW      52
0x00B2	0x00FC      	MOVWF      R12
0x00B3	0x30F1      	MOVLW      241
0x00B4	0x00FD      	MOVWF      R13
L_sendStatus23:
0x00B5	0x0BFD      	DECFSZ     R13, 1
0x00B6	0x28B5      	GOTO       L_sendStatus23
0x00B7	0x0BFC      	DECFSZ     R12, 1
0x00B8	0x28B5      	GOTO       L_sendStatus23
0x00B9	0x0000      	NOP
0x00BA	0x0000      	NOP
;KC104_Lights-2.c,52 :: 		for(i=0; i<8; i++){
0x00BB	0x0AD1      	INCF       sendStatus_i_L0, 1
0x00BC	0x1903      	BTFSC      STATUS, 2
0x00BD	0x0AD2      	INCF       sendStatus_i_L0+1, 1
;KC104_Lights-2.c,60 :: 		}
0x00BE	0x2897      	GOTO       L_sendStatus19
L_sendStatus20:
;KC104_Lights-2.c,61 :: 		}
L_sendStatus18:
L_sendStatus17:
;KC104_Lights-2.c,63 :: 		PORTB |= 0b01010000;
0x00BF	0x3050      	MOVLW      80
0x00C0	0x0486      	IORWF      PORTB, 1
;KC104_Lights-2.c,64 :: 		PORTB |= pulsePin;
0x00C1	0x1686      	BSF        PORTB, 5
;KC104_Lights-2.c,65 :: 		delay_ms(pulseDelay);
0x00C2	0x3034      	MOVLW      52
0x00C3	0x00FC      	MOVWF      R12
0x00C4	0x30F1      	MOVLW      241
0x00C5	0x00FD      	MOVWF      R13
L_sendStatus24:
0x00C6	0x0BFD      	DECFSZ     R13, 1
0x00C7	0x28C6      	GOTO       L_sendStatus24
0x00C8	0x0BFC      	DECFSZ     R12, 1
0x00C9	0x28C6      	GOTO       L_sendStatus24
0x00CA	0x0000      	NOP
0x00CB	0x0000      	NOP
;KC104_Lights-2.c,66 :: 		PORTB &= 0b10001111; //clear comm pins
0x00CC	0x308F      	MOVLW      143
0x00CD	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,67 :: 		TRISB |= 0b01110000;  //sets comm pins back to input
0x00CE	0x3070      	MOVLW      112
0x00CF	0x1683      	BSF        STATUS, 5
0x00D0	0x0486      	IORWF      TRISB, 1
;KC104_Lights-2.c,68 :: 		return;
;KC104_Lights-2.c,69 :: 		}
L_end_sendStatus:
0x00D1	0x0008      	RETURN
; end of _sendStatus
_init_ports:
;KC104_Lights-2.c,73 :: 		void init_ports(void){
;KC104_Lights-2.c,74 :: 		OSCCON = 0x71;   //configures the internal oscillator
0x00D2	0x3071      	MOVLW      113
0x00D3	0x1683      	BSF        STATUS, 5
0x00D4	0x1303      	BCF        STATUS, 6
0x00D5	0x008F      	MOVWF      OSCCON
;KC104_Lights-2.c,75 :: 		ANSEL=0x00;        // Set inputs to digital
0x00D6	0x1283      	BCF        STATUS, 5
0x00D7	0x1703      	BSF        STATUS, 6
0x00D8	0x019E      	CLRF       ANSEL
;KC104_Lights-2.c,76 :: 		ANSELH = 0x00;     //disables something that is holding pins RB5 and RB6
0x00D9	0x019F      	CLRF       ANSELH
;KC104_Lights-2.c,77 :: 		CM1CON0 = 0x00;
0x00DA	0x0199      	CLRF       CM1CON0
;KC104_Lights-2.c,78 :: 		CM2CON0 = 0x00;
0x00DB	0x019A      	CLRF       CM2CON0
;KC104_Lights-2.c,79 :: 		IOCB = 0b00000000;
0x00DC	0x0196      	CLRF       IOCB
;KC104_Lights-2.c,81 :: 		TRISA=0x00;        // port a is an output
0x00DD	0x1683      	BSF        STATUS, 5
0x00DE	0x1303      	BCF        STATUS, 6
0x00DF	0x0185      	CLRF       TRISA
;KC104_Lights-2.c,83 :: 		PORTB = 0x00;
0x00E0	0x1283      	BCF        STATUS, 5
0x00E1	0x0186      	CLRF       PORTB
;KC104_Lights-2.c,84 :: 		TRISB=0b01111111; //pin 7 is an output, 0-6 are input
0x00E2	0x307F      	MOVLW      127
0x00E3	0x1683      	BSF        STATUS, 5
0x00E4	0x0086      	MOVWF      TRISB
;KC104_Lights-2.c,85 :: 		PORTC = 0x00;
0x00E5	0x1283      	BCF        STATUS, 5
0x00E6	0x0187      	CLRF       PORTC
;KC104_Lights-2.c,86 :: 		TRISC=0b00000111; //pins 3-7 are output, 0-2 are input
0x00E7	0x3007      	MOVLW      7
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x0087      	MOVWF      TRISC
;KC104_Lights-2.c,88 :: 		PORTA = 0x00;
0x00EA	0x1283      	BCF        STATUS, 5
0x00EB	0x0185      	CLRF       PORTA
;KC104_Lights-2.c,89 :: 		}
L_end_init_ports:
0x00EC	0x0008      	RETURN
; end of _init_ports
_main:
0x00ED	0x3066      	MOVLW      102
0x00EE	0x1283      	BCF        STATUS, 5
0x00EF	0x1303      	BCF        STATUS, 6
0x00F0	0x00A0      	MOVWF      _currentStatus
;KC104_Lights-2.c,91 :: 		void main(void){
;KC104_Lights-2.c,95 :: 		long j = 0;
;KC104_Lights-2.c,96 :: 		int i = 0;
0x00F1	0x01C7      	CLRF       main_i_L0
0x00F2	0x01C8      	CLRF       main_i_L0+1
0x00F3	0x306E      	MOVLW      110
0x00F4	0x00C9      	MOVWF      main_currentToSend_L0
0x00F5	0x3010      	MOVLW      16
0x00F6	0x00CA      	MOVWF      main_dataPin_L0
0x00F7	0x3000      	MOVLW      0
0x00F8	0x00CB      	MOVWF      main_dataPin_L0+1
0x00F9	0x3020      	MOVLW      32
0x00FA	0x00CC      	MOVWF      main_pulsePin_L0
0x00FB	0x3000      	MOVLW      0
0x00FC	0x00CD      	MOVWF      main_pulsePin_L0+1
0x00FD	0x3040      	MOVLW      64
0x00FE	0x00CE      	MOVWF      main_parityPin_L0
0x00FF	0x3000      	MOVLW      0
0x0100	0x00CF      	MOVWF      main_parityPin_L0+1
;KC104_Lights-2.c,105 :: 		init_ports();
0x0101	0x20D2      	CALL       _init_ports
;KC104_Lights-2.c,106 :: 		PORTC |= 0b11111000;
0x0102	0x30F8      	MOVLW      248
0x0103	0x0487      	IORWF      PORTC, 1
;KC104_Lights-2.c,107 :: 		delay_ms(2000);
0x0104	0x3015      	MOVLW      21
0x0105	0x00FB      	MOVWF      R11
0x0106	0x304B      	MOVLW      75
0x0107	0x00FC      	MOVWF      R12
0x0108	0x30BE      	MOVLW      190
0x0109	0x00FD      	MOVWF      R13
L_main25:
0x010A	0x0BFD      	DECFSZ     R13, 1
0x010B	0x290A      	GOTO       L_main25
0x010C	0x0BFC      	DECFSZ     R12, 1
0x010D	0x290A      	GOTO       L_main25
0x010E	0x0BFB      	DECFSZ     R11, 1
0x010F	0x290A      	GOTO       L_main25
0x0110	0x0000      	NOP
;KC104_Lights-2.c,108 :: 		PORTC &= 0b00000111;
0x0111	0x3007      	MOVLW      7
0x0112	0x0587      	ANDWF      PORTC, 1
;KC104_Lights-2.c,109 :: 		while(1){
L_main26:
;KC104_Lights-2.c,111 :: 		if((PORTB & 0b01110000) == (dataPin + parityPin)){ //initialization bracket
0x0113	0x3070      	MOVLW      112
0x0114	0x0506      	ANDWF      PORTB, 0
0x0115	0x00F3      	MOVWF      R3
0x0116	0x084E      	MOVF       main_parityPin_L0, 0
0x0117	0x074A      	ADDWF      main_dataPin_L0, 0
0x0118	0x00F1      	MOVWF      R1
0x0119	0x084B      	MOVF       main_dataPin_L0+1, 0
0x011A	0x1803      	BTFSC      STATUS, 0
0x011B	0x3E01      	ADDLW      1
0x011C	0x074F      	ADDWF      main_parityPin_L0+1, 0
0x011D	0x00F2      	MOVWF      R1+1
0x011E	0x3000      	MOVLW      0
0x011F	0x0672      	XORWF      R1+1, 0
0x0120	0x1D03      	BTFSS      STATUS, 2
0x0121	0x2924      	GOTO       L__main70
0x0122	0x0871      	MOVF       R1, 0
0x0123	0x0673      	XORWF      R3, 0
L__main70:
0x0124	0x1D03      	BTFSS      STATUS, 2
0x0125	0x2A1B      	GOTO       L_main28
;KC104_Lights-2.c,113 :: 		for(i = 0; i < 9; i++ ){  //all 8 bits of data and the closing bracket. 9 total
0x0126	0x01C7      	CLRF       main_i_L0
0x0127	0x01C8      	CLRF       main_i_L0+1
L_main29:
0x0128	0x3080      	MOVLW      128
0x0129	0x0648      	XORWF      main_i_L0+1, 0
0x012A	0x00F0      	MOVWF      R0
0x012B	0x3080      	MOVLW      128
0x012C	0x0270      	SUBWF      R0, 0
0x012D	0x1D03      	BTFSS      STATUS, 2
0x012E	0x2931      	GOTO       L__main71
0x012F	0x3009      	MOVLW      9
0x0130	0x0247      	SUBWF      main_i_L0, 0
L__main71:
0x0131	0x1803      	BTFSC      STATUS, 0
0x0132	0x29A9      	GOTO       L_main30
;KC104_Lights-2.c,114 :: 		while((!(PORTB & pulsePin))  ){ //  && (j < timeOut)){ // wait till pulse starts
L_main32:
0x0133	0x084C      	MOVF       main_pulsePin_L0, 0
0x0134	0x0506      	ANDWF      PORTB, 0
0x0135	0x00F0      	MOVWF      R0
0x0136	0x3000      	MOVLW      0
0x0137	0x054D      	ANDWF      main_pulsePin_L0+1, 0
0x0138	0x00F1      	MOVWF      R0+1
0x0139	0x0870      	MOVF       R0, 0
0x013A	0x0471      	IORWF      R0+1, 0
0x013B	0x1D03      	BTFSS      STATUS, 2
0x013C	0x2940      	GOTO       L_main33
;KC104_Lights-2.c,115 :: 		PORTA = 0b00000001; // counting while we wait
0x013D	0x3001      	MOVLW      1
0x013E	0x0085      	MOVWF      PORTA
;KC104_Lights-2.c,117 :: 		}
0x013F	0x2933      	GOTO       L_main32
L_main33:
;KC104_Lights-2.c,118 :: 		delay_ms(1); //tiny delay to ensure we have good data before writing it
0x0140	0x3003      	MOVLW      3
0x0141	0x00FC      	MOVWF      R12
0x0142	0x3097      	MOVLW      151
0x0143	0x00FD      	MOVWF      R13
L_main34:
0x0144	0x0BFD      	DECFSZ     R13, 1
0x0145	0x2944      	GOTO       L_main34
0x0146	0x0BFC      	DECFSZ     R12, 1
0x0147	0x2944      	GOTO       L_main34
0x0148	0x0000      	NOP
0x0149	0x0000      	NOP
;KC104_Lights-2.c,120 :: 		if( i < 8)
0x014A	0x3080      	MOVLW      128
0x014B	0x0648      	XORWF      main_i_L0+1, 0
0x014C	0x00F0      	MOVWF      R0
0x014D	0x3080      	MOVLW      128
0x014E	0x0270      	SUBWF      R0, 0
0x014F	0x1D03      	BTFSS      STATUS, 2
0x0150	0x2953      	GOTO       L__main72
0x0151	0x3008      	MOVLW      8
0x0152	0x0247      	SUBWF      main_i_L0, 0
L__main72:
0x0153	0x1803      	BTFSC      STATUS, 0
0x0154	0x296B      	GOTO       L_main35
;KC104_Lights-2.c,121 :: 		lightsTemp[i] = (PORTB & dataPin); // WRITE DATA
0x0155	0x0847      	MOVF       main_i_L0, 0
0x0156	0x00F0      	MOVWF      R0
0x0157	0x0848      	MOVF       main_i_L0+1, 0
0x0158	0x00F1      	MOVWF      R0+1
0x0159	0x0DF0      	RLF        R0, 1
0x015A	0x0DF1      	RLF        R0+1, 1
0x015B	0x1070      	BCF        R0, 0
0x015C	0x0870      	MOVF       R0, 0
0x015D	0x3E23      	ADDLW      main_lightsTemp_L0
0x015E	0x0084      	MOVWF      FSR
0x015F	0x084A      	MOVF       main_dataPin_L0, 0
0x0160	0x0506      	ANDWF      PORTB, 0
0x0161	0x00F0      	MOVWF      R0
0x0162	0x3000      	MOVLW      0
0x0163	0x054B      	ANDWF      main_dataPin_L0+1, 0
0x0164	0x00F1      	MOVWF      R0+1
0x0165	0x0870      	MOVF       R0, 0
0x0166	0x0080      	MOVWF      INDF
0x0167	0x0871      	MOVF       R0+1, 0
0x0168	0x0A84      	INCF       FSR, 1
0x0169	0x0080      	MOVWF      INDF
0x016A	0x298E      	GOTO       L_main36
L_main35:
;KC104_Lights-2.c,122 :: 		else if(i == 8)
0x016B	0x3000      	MOVLW      0
0x016C	0x0648      	XORWF      main_i_L0+1, 0
0x016D	0x1D03      	BTFSS      STATUS, 2
0x016E	0x2971      	GOTO       L__main73
0x016F	0x3008      	MOVLW      8
0x0170	0x0647      	XORWF      main_i_L0, 0
L__main73:
0x0171	0x1D03      	BTFSS      STATUS, 2
0x0172	0x298E      	GOTO       L_main37
;KC104_Lights-2.c,123 :: 		lightsTemp[i] = (PORTB & (dataPin + parityPin));  // closing bracket
0x0173	0x0847      	MOVF       main_i_L0, 0
0x0174	0x00F0      	MOVWF      R0
0x0175	0x0848      	MOVF       main_i_L0+1, 0
0x0176	0x00F1      	MOVWF      R0+1
0x0177	0x0DF0      	RLF        R0, 1
0x0178	0x0DF1      	RLF        R0+1, 1
0x0179	0x1070      	BCF        R0, 0
0x017A	0x0870      	MOVF       R0, 0
0x017B	0x3E23      	ADDLW      main_lightsTemp_L0
0x017C	0x0084      	MOVWF      FSR
0x017D	0x084E      	MOVF       main_parityPin_L0, 0
0x017E	0x074A      	ADDWF      main_dataPin_L0, 0
0x017F	0x00F0      	MOVWF      R0
0x0180	0x084B      	MOVF       main_dataPin_L0+1, 0
0x0181	0x1803      	BTFSC      STATUS, 0
0x0182	0x3E01      	ADDLW      1
0x0183	0x074F      	ADDWF      main_parityPin_L0+1, 0
0x0184	0x00F1      	MOVWF      R0+1
0x0185	0x0806      	MOVF       PORTB, 0
0x0186	0x05F0      	ANDWF      R0, 1
0x0187	0x3000      	MOVLW      0
0x0188	0x05F1      	ANDWF      R0+1, 1
0x0189	0x0870      	MOVF       R0, 0
0x018A	0x0080      	MOVWF      INDF
0x018B	0x0871      	MOVF       R0+1, 0
0x018C	0x0A84      	INCF       FSR, 1
0x018D	0x0080      	MOVWF      INDF
L_main37:
L_main36:
;KC104_Lights-2.c,125 :: 		while((PORTB & pulsePin)  ){   //&& (j < timeOut)){ // wait till pulse is over
L_main38:
0x018E	0x084C      	MOVF       main_pulsePin_L0, 0
0x018F	0x0506      	ANDWF      PORTB, 0
0x0190	0x00F0      	MOVWF      R0
0x0191	0x3000      	MOVLW      0
0x0192	0x054D      	ANDWF      main_pulsePin_L0+1, 0
0x0193	0x00F1      	MOVWF      R0+1
0x0194	0x0870      	MOVF       R0, 0
0x0195	0x0471      	IORWF      R0+1, 0
0x0196	0x1903      	BTFSC      STATUS, 2
0x0197	0x299B      	GOTO       L_main39
;KC104_Lights-2.c,126 :: 		PORTA = 0b00000100; // counting while we wait
0x0198	0x3004      	MOVLW      4
0x0199	0x0085      	MOVWF      PORTA
;KC104_Lights-2.c,128 :: 		}
0x019A	0x298E      	GOTO       L_main38
L_main39:
;KC104_Lights-2.c,129 :: 		delay_ms(1); //tiny delay to ensure pulse is really over before starting again
0x019B	0x3003      	MOVLW      3
0x019C	0x00FC      	MOVWF      R12
0x019D	0x3097      	MOVLW      151
0x019E	0x00FD      	MOVWF      R13
L_main40:
0x019F	0x0BFD      	DECFSZ     R13, 1
0x01A0	0x299F      	GOTO       L_main40
0x01A1	0x0BFC      	DECFSZ     R12, 1
0x01A2	0x299F      	GOTO       L_main40
0x01A3	0x0000      	NOP
0x01A4	0x0000      	NOP
;KC104_Lights-2.c,113 :: 		for(i = 0; i < 9; i++ ){  //all 8 bits of data and the closing bracket. 9 total
0x01A5	0x0AC7      	INCF       main_i_L0, 1
0x01A6	0x1903      	BTFSC      STATUS, 2
0x01A7	0x0AC8      	INCF       main_i_L0+1, 1
;KC104_Lights-2.c,133 :: 		}
0x01A8	0x2928      	GOTO       L_main29
L_main30:
;KC104_Lights-2.c,135 :: 		if((lightsTemp[8] == (dataPin + parityPin))   ){  // && (j < timeOut)){  //all went well
0x01A9	0x084E      	MOVF       main_parityPin_L0, 0
0x01AA	0x074A      	ADDWF      main_dataPin_L0, 0
0x01AB	0x00F1      	MOVWF      R1
0x01AC	0x084B      	MOVF       main_dataPin_L0+1, 0
0x01AD	0x1803      	BTFSC      STATUS, 0
0x01AE	0x3E01      	ADDLW      1
0x01AF	0x074F      	ADDWF      main_parityPin_L0+1, 0
0x01B0	0x00F2      	MOVWF      R1+1
0x01B1	0x0834      	MOVF       main_lightsTemp_L0+17, 0
0x01B2	0x0672      	XORWF      R1+1, 0
0x01B3	0x1D03      	BTFSS      STATUS, 2
0x01B4	0x29B7      	GOTO       L__main74
0x01B5	0x0871      	MOVF       R1, 0
0x01B6	0x0633      	XORWF      main_lightsTemp_L0+16, 0
L__main74:
0x01B7	0x1D03      	BTFSS      STATUS, 2
0x01B8	0x2A1A      	GOTO       L_main41
;KC104_Lights-2.c,138 :: 		for(i = 0; i < 8; i++){   			 //put temp into final array
0x01B9	0x01C7      	CLRF       main_i_L0
0x01BA	0x01C8      	CLRF       main_i_L0+1
L_main42:
0x01BB	0x3080      	MOVLW      128
0x01BC	0x0648      	XORWF      main_i_L0+1, 0
0x01BD	0x00F0      	MOVWF      R0
0x01BE	0x3080      	MOVLW      128
0x01BF	0x0270      	SUBWF      R0, 0
0x01C0	0x1D03      	BTFSS      STATUS, 2
0x01C1	0x29C4      	GOTO       L__main75
0x01C2	0x3008      	MOVLW      8
0x01C3	0x0247      	SUBWF      main_i_L0, 0
L__main75:
0x01C4	0x1803      	BTFSC      STATUS, 0
0x01C5	0x29E3      	GOTO       L_main43
;KC104_Lights-2.c,139 :: 		lightsFinal[i] = lightsTemp[i];
0x01C6	0x0847      	MOVF       main_i_L0, 0
0x01C7	0x00F0      	MOVWF      R0
0x01C8	0x0848      	MOVF       main_i_L0+1, 0
0x01C9	0x00F1      	MOVWF      R0+1
0x01CA	0x0DF0      	RLF        R0, 1
0x01CB	0x0DF1      	RLF        R0+1, 1
0x01CC	0x1070      	BCF        R0, 0
0x01CD	0x0870      	MOVF       R0, 0
0x01CE	0x3E35      	ADDLW      main_lightsFinal_L0
0x01CF	0x00F2      	MOVWF      R2
0x01D0	0x0870      	MOVF       R0, 0
0x01D1	0x3E23      	ADDLW      main_lightsTemp_L0
0x01D2	0x0084      	MOVWF      FSR
0x01D3	0x0800      	MOVF       INDF, 0
0x01D4	0x00F0      	MOVWF      R0
0x01D5	0x0A84      	INCF       FSR, 1
0x01D6	0x0800      	MOVF       INDF, 0
0x01D7	0x00F1      	MOVWF      R0+1
0x01D8	0x0872      	MOVF       R2, 0
0x01D9	0x0084      	MOVWF      FSR
0x01DA	0x0870      	MOVF       R0, 0
0x01DB	0x0080      	MOVWF      INDF
0x01DC	0x0871      	MOVF       R0+1, 0
0x01DD	0x0A84      	INCF       FSR, 1
0x01DE	0x0080      	MOVWF      INDF
;KC104_Lights-2.c,138 :: 		for(i = 0; i < 8; i++){   			 //put temp into final array
0x01DF	0x0AC7      	INCF       main_i_L0, 1
0x01E0	0x1903      	BTFSC      STATUS, 2
0x01E1	0x0AC8      	INCF       main_i_L0+1, 1
;KC104_Lights-2.c,140 :: 		}
0x01E2	0x29BB      	GOTO       L_main42
L_main43:
;KC104_Lights-2.c,143 :: 		PORTC &= 0b00000111; //clear output pins on portC
0x01E3	0x3007      	MOVLW      7
0x01E4	0x0587      	ANDWF      PORTC, 1
;KC104_Lights-2.c,144 :: 		PORTB &= 0b01111111; //clear output PIN (SINGULAR) on PORTB
0x01E5	0x307F      	MOVLW      127
0x01E6	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,148 :: 		if(lightsFinal[1])
0x01E7	0x0837      	MOVF       main_lightsFinal_L0+2, 0
0x01E8	0x0438      	IORWF      main_lightsFinal_L0+3, 0
0x01E9	0x1903      	BTFSC      STATUS, 2
0x01EA	0x29EC      	GOTO       L_main45
;KC104_Lights-2.c,149 :: 		PORTC |= 0b10000000;
0x01EB	0x1787      	BSF        PORTC, 7
L_main45:
;KC104_Lights-2.c,150 :: 		if(lightsFinal[2])
0x01EC	0x0839      	MOVF       main_lightsFinal_L0+4, 0
0x01ED	0x043A      	IORWF      main_lightsFinal_L0+5, 0
0x01EE	0x1903      	BTFSC      STATUS, 2
0x01EF	0x29F2      	GOTO       L_main46
;KC104_Lights-2.c,151 :: 		PORTC = 0b01000000;
0x01F0	0x3040      	MOVLW      64
0x01F1	0x0087      	MOVWF      PORTC
L_main46:
;KC104_Lights-2.c,152 :: 		if(lightsFinal[3])
0x01F2	0x083B      	MOVF       main_lightsFinal_L0+6, 0
0x01F3	0x043C      	IORWF      main_lightsFinal_L0+7, 0
0x01F4	0x1903      	BTFSC      STATUS, 2
0x01F5	0x29F7      	GOTO       L_main47
;KC104_Lights-2.c,153 :: 		PORTC |= 0b00001000;   // the pins on the chip are not in ascending order
0x01F6	0x1587      	BSF        PORTC, 3
L_main47:
;KC104_Lights-2.c,154 :: 		if(lightsFinal[4])
0x01F7	0x083D      	MOVF       main_lightsFinal_L0+8, 0
0x01F8	0x043E      	IORWF      main_lightsFinal_L0+9, 0
0x01F9	0x1903      	BTFSC      STATUS, 2
0x01FA	0x29FC      	GOTO       L_main48
;KC104_Lights-2.c,155 :: 		PORTC |= 0b00010000;
0x01FB	0x1607      	BSF        PORTC, 4
L_main48:
;KC104_Lights-2.c,156 :: 		if(lightsFinal[5])
0x01FC	0x083F      	MOVF       main_lightsFinal_L0+10, 0
0x01FD	0x0440      	IORWF      main_lightsFinal_L0+11, 0
0x01FE	0x1903      	BTFSC      STATUS, 2
0x01FF	0x2A01      	GOTO       L_main49
;KC104_Lights-2.c,157 :: 		PORTC |= 0b00100000;
0x0200	0x1687      	BSF        PORTC, 5
L_main49:
;KC104_Lights-2.c,160 :: 		if(!((PORTB & 0b10000000) || (PORTC & 0b11111000))) // all lights off so set to off
0x0201	0x1B86      	BTFSC      PORTB, 7
0x0202	0x2A0A      	GOTO       L_main51
0x0203	0x30F8      	MOVLW      248
0x0204	0x0507      	ANDWF      PORTC, 0
0x0205	0x00F0      	MOVWF      R0
0x0206	0x1D03      	BTFSS      STATUS, 2
0x0207	0x2A0A      	GOTO       L_main51
0x0208	0x01F0      	CLRF       R0
0x0209	0x2A0C      	GOTO       L_main50
L_main51:
0x020A	0x3001      	MOVLW      1
0x020B	0x00F0      	MOVWF      R0
L_main50:
0x020C	0x0870      	MOVF       R0, 0
0x020D	0x1D03      	BTFSS      STATUS, 2
0x020E	0x2A12      	GOTO       L_main52
;KC104_Lights-2.c,161 :: 		currentStatus = 'f';
0x020F	0x3066      	MOVLW      102
0x0210	0x00A0      	MOVWF      _currentStatus
0x0211	0x2A14      	GOTO       L_main53
L_main52:
;KC104_Lights-2.c,163 :: 		currentStatus = 'o'; //sets it to on
0x0212	0x306F      	MOVLW      111
0x0213	0x00A0      	MOVWF      _currentStatus
L_main53:
;KC104_Lights-2.c,165 :: 		while(PORTB & 0b01110000);  // wait until port B is clean before continuing
L_main54:
0x0214	0x3070      	MOVLW      112
0x0215	0x0506      	ANDWF      PORTB, 0
0x0216	0x00F0      	MOVWF      R0
0x0217	0x1903      	BTFSC      STATUS, 2
0x0218	0x2A1A      	GOTO       L_main55
0x0219	0x2A14      	GOTO       L_main54
L_main55:
;KC104_Lights-2.c,166 :: 		}
L_main41:
;KC104_Lights-2.c,167 :: 		}
0x021A	0x2A3F      	GOTO       L_main56
L_main28:
;KC104_Lights-2.c,170 :: 		else if(PORTC & 0b00000001){ //direction from the wall panel, toggles on or off
0x021B	0x1C07      	BTFSS      PORTC, 0
0x021C	0x2A3F      	GOTO       L_main57
;KC104_Lights-2.c,171 :: 		delay_ms(15); 		//debounce
0x021D	0x3027      	MOVLW      39
0x021E	0x00FC      	MOVWF      R12
0x021F	0x30F5      	MOVLW      245
0x0220	0x00FD      	MOVWF      R13
L_main58:
0x0221	0x0BFD      	DECFSZ     R13, 1
0x0222	0x2A21      	GOTO       L_main58
0x0223	0x0BFC      	DECFSZ     R12, 1
0x0224	0x2A21      	GOTO       L_main58
;KC104_Lights-2.c,172 :: 		if(PORTC & 0b00000001){
0x0225	0x1C07      	BTFSS      PORTC, 0
0x0226	0x2A3F      	GOTO       L_main59
;KC104_Lights-2.c,174 :: 		if(currentStatus == 'o'){ //it was on, so turn off
0x0227	0x0820      	MOVF       _currentStatus, 0
0x0228	0x3A6F      	XORLW      111
0x0229	0x1D03      	BTFSS      STATUS, 2
0x022A	0x2A32      	GOTO       L_main60
;KC104_Lights-2.c,175 :: 		currentStatus = 'f';
0x022B	0x3066      	MOVLW      102
0x022C	0x00A0      	MOVWF      _currentStatus
;KC104_Lights-2.c,176 :: 		currentToSend = 'f';
0x022D	0x3066      	MOVLW      102
0x022E	0x00C9      	MOVWF      main_currentToSend_L0
;KC104_Lights-2.c,177 :: 		PORTC &= 0b00000111;
0x022F	0x3007      	MOVLW      7
0x0230	0x0587      	ANDWF      PORTC, 1
;KC104_Lights-2.c,178 :: 		}
0x0231	0x2A3C      	GOTO       L_main61
L_main60:
;KC104_Lights-2.c,179 :: 		else if(currentStatus == 'f'){  //it was off, so turn on
0x0232	0x0820      	MOVF       _currentStatus, 0
0x0233	0x3A66      	XORLW      102
0x0234	0x1D03      	BTFSS      STATUS, 2
0x0235	0x2A3C      	GOTO       L_main62
;KC104_Lights-2.c,180 :: 		currentStatus = 'o';
0x0236	0x306F      	MOVLW      111
0x0237	0x00A0      	MOVWF      _currentStatus
;KC104_Lights-2.c,181 :: 		currentToSend = 'o';
0x0238	0x306F      	MOVLW      111
0x0239	0x00C9      	MOVWF      main_currentToSend_L0
;KC104_Lights-2.c,182 :: 		PORTC |= 0b11111000;
0x023A	0x30F8      	MOVLW      248
0x023B	0x0487      	IORWF      PORTC, 1
;KC104_Lights-2.c,183 :: 		}
L_main62:
L_main61:
;KC104_Lights-2.c,184 :: 		sendStatus(currentToSend);  //sends the command
0x023C	0x0849      	MOVF       main_currentToSend_L0, 0
0x023D	0x00D0      	MOVWF      FARG_sendStatus_lightStatus
0x023E	0x2016      	CALL       _sendStatus
;KC104_Lights-2.c,185 :: 		}
L_main59:
;KC104_Lights-2.c,186 :: 		}
L_main57:
L_main56:
;KC104_Lights-2.c,187 :: 		while(PORTC & 0b00000001); // waits for user to get off the button!!!!
L_main63:
0x023F	0x1283      	BCF        STATUS, 5
0x0240	0x1C07      	BTFSS      PORTC, 0
0x0241	0x2A43      	GOTO       L_main64
0x0242	0x2A3F      	GOTO       L_main63
L_main64:
;KC104_Lights-2.c,188 :: 		PORTB &= 0b10001111; //turns off
0x0243	0x308F      	MOVLW      143
0x0244	0x0586      	ANDWF      PORTB, 1
;KC104_Lights-2.c,189 :: 		currentToSend = 0;    // resets it for next time
0x0245	0x01C9      	CLRF       main_currentToSend_L0
;KC104_Lights-2.c,190 :: 		}
0x0246	0x2913      	GOTO       L_main26
;KC104_Lights-2.c,191 :: 		}
L_end_main:
0x0247	0x2A47      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [12]    ___CC2DW
0x0016     [188]    _sendStatus
0x00D2      [27]    _init_ports
0x00ED     [347]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020       [1]    _currentStatus
0x0021       [2]    ___DoICPAddr
0x0023      [18]    main_lightsTemp_L0
0x0035      [18]    main_lightsFinal_L0
0x0047       [2]    main_i_L0
0x0049       [1]    main_currentToSend_L0
0x004A       [2]    main_dataPin_L0
0x004C       [2]    main_pulsePin_L0
0x004E       [2]    main_parityPin_L0
0x0050       [1]    FARG_sendStatus_lightStatus
0x0051       [2]    sendStatus_i_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008F       [1]    OSCCON
0x0116       [1]    IOCB
0x0119       [1]    CM1CON0
0x011A       [1]    CM2CON0
0x011E       [1]    ANSEL
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_sendStatus0
  L_sendStatus1
  L_sendStatus2
  L_sendStatus3
  L_sendStatus4
  L_sendStatus5
  L_sendStatus6
  L_sendStatus7
  L_sendStatus8
  L_sendStatus9
  L_sendStatus10
  L_sendStatus11
  L_sendStatus12
  L_sendStatus13
  L_sendStatus14
  L_sendStatus15
  L_sendStatus16
  L_sendStatus17
  L_sendStatus18
  L_sendStatus19
  L_sendStatus20
  L_sendStatus21
  L_sendStatus22
  L_sendStatus23
  L_sendStatus24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_end_sendStatus
  _sendStatus
  L__sendStatus66
  L__sendStatus67
  L_end_init_ports
  _init_ports
  L_end_main
  _main
  L__main70
  L__main71
  L__main72
  L__main73
  L__main74
  L__main75
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
